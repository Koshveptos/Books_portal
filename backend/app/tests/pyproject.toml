[tool.poetry]
name = "books-portal-tests"
version = "0.1.0"
description = "Тесты для Books Portal"
authors = ["Your Name <your.email@example.com>"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.9"
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
httpx = "^0.24.1"
locust = "^2.15.1"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
python-multipart = "^0.0.6"
aiohttp = "^3.8.5"
asyncio = "^3.4.3"
requests = "^2.31.0"
beautifulsoup4 = "^4.12.2"
bandit = "^1.7.5"
safety = "^2.3.5"
aiosqlite = "^0.19.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.23"}

[tool.poetry.group.dev.dependencies]
black = "^23.9.1"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.5.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["unit", "integration", "security"]
python_files = ["test_*.py"]
addopts = "-v --cov=app --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["app"]
omit = [
    "app/tests/*",
    "app/migrations/*",
    "app/alembic/*",
    "app/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.poetry.scripts]
test = "pytest:main"
