"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞.
"""

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup


def get_main_menu_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
    """
    keyboard = [
        [KeyboardButton(text="üìö –ü–æ–∏—Å–∫ –∫–Ω–∏–≥")],
        [KeyboardButton(text="üìñ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")],
        [KeyboardButton(text="üìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏")],
        [KeyboardButton(text="üë• –ê–≤—Ç–æ—Ä—ã")],
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ")


def get_books_keyboard(books: list = None, page: int = 1) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–Ω–∏–≥
    """
    keyboard = []
    if books:
        for book in books:
            keyboard.append(
                [InlineKeyboardButton(text=f"{book['title']} - {book['author']}", callback_data=f"book_{book['id']}")]
            )

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton(text="‚óÄÔ∏è", callback_data=f"books_page_{page-1}"))
    nav_buttons.append(InlineKeyboardButton(text=f"üìÑ {page}", callback_data="current_page"))
    nav_buttons.append(InlineKeyboardButton(text="‚ñ∂Ô∏è", callback_data=f"books_page_{page+1}"))
    keyboard.append(nav_buttons)

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_categories_keyboard(categories: list = None) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    """
    keyboard = []
    if categories:
        for category in categories:
            keyboard.append([InlineKeyboardButton(text=category["name"], callback_data=f"category_{category['id']}")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_authors_keyboard(authors: list = None) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–≤—Ç–æ—Ä–æ–≤
    """
    keyboard = []
    if authors:
        for author in authors:
            keyboard.append([InlineKeyboardButton(text=author["name"], callback_data=f"author_{author['id']}")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_rating_keyboard(book_id: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –∫–Ω–∏–≥–∏
    """
    keyboard = []
    for rating in range(1, 6):
        keyboard.append([InlineKeyboardButton(text="‚≠ê" * rating, callback_data=f"rate_{book_id}_{rating}")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)
